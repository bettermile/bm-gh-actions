name: Stage Database Migration

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      GITHUB_ROLE:
        required: true
        type: string
      AWS_REGION:
        required: false
        type: string
        default: eu-central-1
      AWS_ACCOUNT_ID:
        required: true
        type: string
      AWS_RDS_DATABASE:
        required: true
        type: string
      AWS_RDS_SCHEMA:
        required: false
        type: string
      AWS_RDS:
        required: true
        type: string
      AWS_BASTION_HOST_NAME:
        required: false
        type: string
      CACHE_PATH:
        required: false
        type: string
      CACHE_KEY:
        required: false
        type: string
      FLYWAY_VERSION:
        required: false
        type: string
        default: 9.21.1
      RUNNER:
        required: false
        type: string
        default: ubuntu-20.04
    secrets:
      SSH_KEY:
        required: true
      AWS_RDS_PASSWORD:
        required: true

jobs:
  migration:
    runs-on: ${{ inputs.runner }}
    steps:

      - name: Default Checkout
        uses: actions/checkout@v4

      - name: Cache Primes
        if: ${{ inputs.CACHE_PATH != '' && inputs.CACHE_KEY != '' }}
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: ${{ inputs.CACHE_PATH }}
          key: ${{ inputs.CACHE_KEY }}

      - name: Install Flyway
        run: |
          VERSION=${{ inputs.FLYWAY_VERSION }}
          wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/$VERSION/flyway-commandline-$VERSION-linux-x64.tar.gz | tar xvz && sudo ln -s `pwd`/flyway-$VERSION/flyway /usr/local/bin

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: unnecessary
          if_key_exists: fail

      - name: Configure AWS Credentials
        if: ${{ inputs.AWS_ACCOUNT_ID != '' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/${{ inputs.GITHUB_ROLE }}
          role-session-name: ${{ inputs.GITHUB_ROLE }}-oidc
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Run Flyway Migration
        shell: bash
        env:
          JAVA_ARGS: -Xmx4G
          FLYWAY_EDITION: Community
          FLYWAY_URL: jdbc:postgresql://localhost:5432/${{ inputs.AWS_RDS_DATABASE }}
          FLYWAY_USER: postgres
          FLYWAY_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
          FLYWAY_SCHEMAS: ${{ inputs.AWS_RDS_SCHEMA || 'public' }}
          FLYWAY_BASELINE_ON_MIGRATE: false
          FLYWAY_OUT_OF_ORDER: false
          FLYWAY_LOCATIONS: /src/main/resources/db/migration
        run: |
          INSTANCE_ID=$(AWS_REGION=${{ inputs.AWS_REGION }} aws ec2 describe-instances --filter "Name=tag:Name,Values=${{ inputs.AWS_BASTION_HOST_NAME || 'BastionHost' }}" --query "Reservations[].Instances[?State.Name == 'running'].InstanceId[]" --output text)
          ssh ec2-user@$INSTANCE_ID -L 5432:${{ inputs.AWS_RDS }}:5432 -f -N -o StrictHostKeyChecking=no -o ProxyCommand="aws --region ${{ inputs.AWS_REGION }} ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p"
          flyway info
          flyway migrate
          flyway info
