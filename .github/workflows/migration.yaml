name: DB Migration

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      AWS_RDS_DATABASE:
        required: true
        type: string
      AWS_RDS_SCHEMA:
        required: false
        type: string
      AWS_RDS:
        required: true
        type: string
      AWS_BASTION_HOST_NAME:
        required: false
        type: string
      CACHE_PATH:
        required: false
        type: string
      CACHE_KEY:
        required: false
        type: string
      FLYWAY_VERSION:
        required: false
        type: string
    secrets:
      SSH_KEY:
        required: true
      AWS_RDS_PASSWORD:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  migration:
    runs-on: ubuntu-20.04-16-cores
    steps:
      - name: Default Checkout
        uses: actions/checkout@v3
      - name: Cache Primes
        if: ${{ inputs.CACHE_PATH != '' && inputs.CACHE_KEY != '' }}
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: ${{ inputs.CACHE_PATH }}
          key: ${{ inputs.CACHE_KEY }}
      - name: Install Flyway
        run: |
          VERSION=${{ inputs.FLYWAY_VERSION || '9.8.1' }}
          wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/$VERSION/flyway-commandline-$VERSION-linux-x64.tar.gz | tar xvz && sudo ln -s `pwd`/flyway-$VERSION/flyway /usr/local/bin
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa
          known_hosts: unnecessary
          if_key_exists: fail
      - name: AWS - Setup
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Run Flyway Migration
        shell: bash
        run: |
          export JAVA_ARGS="-Xmx32G"
          INSTANCE_ID=$(AWS_REGION=${{ inputs.AWS_REGION }} aws ec2 describe-instances --filter "Name=tag:Name,Values=${{ inputs.AWS_BASTION_HOST_NAME || 'BastionHost' }}" --query "Reservations[].Instances[?State.Name == 'running'].InstanceId[]" --output text)
          ssh ec2-user@$INSTANCE_ID -L 5432:${{ inputs.AWS_RDS }}:5432 -f -N -o StrictHostKeyChecking=no -o ProxyCommand="aws --region ${{ inputs.AWS_REGION }} ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p"
          flyway -user="postgres" -password="${{ secrets.AWS_RDS_PASSWORD }}" -locations="/src/main/resources/db/migration" -url="jdbc:postgresql://localhost:5432/${{ inputs.AWS_RDS_DATABASE }}?sslmode=require&sslrootcert=rds-combined-ca-bundle.pem" -schemas="${{ inputs.AWS_RDS_SCHEMA || 'public' }}" info
          flyway -user="postgres" -password="${{ secrets.AWS_RDS_PASSWORD }}" -locations="/src/main/resources/db/migration" -url="jdbc:postgresql://localhost:5432/${{ inputs.AWS_RDS_DATABASE }}?sslmode=require&sslrootcert=rds-combined-ca-bundle.pem" -schemas="${{ inputs.AWS_RDS_SCHEMA || 'public' }}" -baselineOnMigrate=true -outOfOrder=true migrate
          flyway -user="postgres" -password="${{ secrets.AWS_RDS_PASSWORD }}" -locations="/src/main/resources/db/migration" -url="jdbc:postgresql://localhost:5432/${{ inputs.AWS_RDS_DATABASE }}?sslmode=require&sslrootcert=rds-combined-ca-bundle.pem" -schemas="${{ inputs.AWS_RDS_SCHEMA || 'public' }}" info
