name: Stage Build

on:
  workflow_call:
    inputs:
      GITHUB_ROLE:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      AWS_ACCOUNT_ID:
        required: true
        type: string
      AWS_ECR_APP_PATH:
        required: true
        type: string
      DOCKER_IMAGE_VERSION:
        required: false
        type: string
    secrets:
      PKG_ACTOR:
        required: true
      PKG_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Default Checkout
        uses: actions/checkout@v3

      - name: JDK - Setup
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Log in to GitHub's Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ secrets.PKG_ACTOR }}
          password: ${{ secrets.PKG_TOKEN }}

      - name: Gradle - Build
        run: PKG_ACTOR=${{ secrets.PKG_ACTOR }} PKG_TOKEN=${{ secrets.PKG_TOKEN }} ./gradlew clean build -x test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/${{ inputs.GITHUB_ROLE }}
          role-session-name: ${{ inputs.GITHUB_ROLE }}-oidc
          aws-region: ${{ inputs.AWS_REGION }}
          
      - name: AWS ECR - Setup
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker - Build
        run: docker build --platform linux/amd64 --tag ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com${{ inputs.AWS_ECR_APP_PATH }}:${{ inputs.DOCKER_IMAGE_VERSION || 'latest' }} .

      - name: Docker ECR - Push
        run: docker push ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.AWS_REGION }}.amazonaws.com${{ inputs.AWS_ECR_APP_PATH }}:${{ inputs.DOCKER_IMAGE_VERSION || 'latest' }}
