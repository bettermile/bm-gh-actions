name: Deploy Lambda

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: true
        type: string
      LAMBDA_ALIAS:
        required: true
        type: string
      LAMBDA_NAME:
        required: true
        type: string
      STAGE_NAME:
        required: true
        type: string
      GITHUB_ROLE:
        required: true
        type: string

permissions:
  contents: read
  deployments: write
  id-token: write

jobs:
  deploy:
    name: Deploy to ${{ inputs.STAGE_NAME }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Download source artifact
        uses: actions/download-artifact@v3
        with:
          name: source-build
          path: source/build
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: ${{ github.token }}
          environment: ${{ inputs.STAGE_NAME }}
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.GITHUB_ROLE }}
          aws-region: ${{ inputs.AWS_REGION }}
          role-session-name: lambda-oidc
      - name: Update function code, push new version, and update alias
        run: |
          aws lambda update-function-code --function-name ${{ inputs.LAMBDA_NAME }} --zip-file fileb://./source/build/function.zip
          aws lambda publish-version --function-name ${{ inputs.LAMBDA_NAME }} --description "${GITHUB_REF#refs/heads/}.${GITHUB_SHA::7}"
          latestVersion=$( aws lambda list-versions-by-function --function-name ${{ inputs.LAMBDA_NAME }} --no-paginate --query "max_by(Versions, &to_number(to_number(Version) || '0'))" )
          latestVersionNumber=$( echo $latestVersion | grep -o '"Version": "[^"]*' | grep -o '[^"]*$' )
          echo "The latest version number is $latestVersionNumber"
          aws lambda update-alias --function-name ${{ inputs.LAMBDA_NAME }} --name $ {{ inputs.LAMBDA_ALIAS }} --function-version $latestVersionNumber --routing-config AdditionalVersionWeights={}
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: failure
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
