name: Stage Test

permissions:
  id-token: write
  contents: read
  pull-requests: write
  checks: write

env:
  PKG_ACTOR: ${{ secrets.PKG_ACTOR }}
  PKG_TOKEN: ${{ secrets.PKG_TOKEN }}

on:
  workflow_call:
    inputs:
      GITHUB_ROLE:
        required: false
        type: string
      AWS_REGION:
        required: false
        type: string
        default: eu-central-1
      AWS_ACCOUNT_ID:
        required: false
        type: string
      CACHE_PATH_OUTPUT:
        required: false
        type: string
      CACHE_KEY_OUTPUT:
        required: false
        type: string
      CACHE_PATH_INPUT:
        required: false
        type: string
      CACHE_KEY_INPUT:
        required: false
        type: string
      TEST_TARGET:
        required: false
        type: string
      RUNNER:
        required: false
        type: string
        default: ubuntu-20.04
      RUN_KTLINT:
        required: false
        type: boolean
        default: true

    secrets:
      PKG_ACTOR:
        required: true
      PKG_TOKEN:
        required: true
      API_KEY:
        required: false

jobs:
  test:
    runs-on: ${{ inputs.runner }}
    steps:

      - name: Default Checkout
        uses: actions/checkout@v4

      - name: Run ktlint
        uses: ScaCap/action-ktlint@v1.8.3
        if: ${{ github.event_name == 'pull_request' && inputs.RUN_KTLINT && github.actor != 'dependabot[bot]' }}
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          ktlint_version: 1.1.0

      - name: Cache Primes
        if: ${{ inputs.CACHE_PATH_INPUT != '' && inputs.CACHE_KEY_INPUT != '' }}
        id: cache-primes
        uses: actions/cache@v4
        with:
          path: ${{ inputs.CACHE_PATH_INPUT }}
          key: ${{ inputs.CACHE_KEY_INPUT }}

      - name: JDK - Setup
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Configure AWS Credentials
        if: ${{ inputs.AWS_ACCOUNT_ID != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/${{ inputs.GITHUB_ROLE }}
          role-session-name: ${{ inputs.GITHUB_ROLE }}-oidc
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Gradle - Test
        if: ${{ !inputs.TEST_TARGET }}
        env:
          API_KEY=${{ secrets.API_KEY }}
        run: ./gradlew test --info

      - name: Gradle - Test Target
        if: ${{ inputs.TEST_TARGET }}
        env:
          API_KEY=${{ secrets.API_KEY }}
        run: ./gradlew test --info --tests ${{ inputs.TEST_TARGET }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4.3.1
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report
          path: '${{ github.workspace }}/build/reports/tests/test/**'

      - name: Cache node modules
        if: ${{ inputs.CACHE_PATH_OUTPUT != '' && inputs.CACHE_KEY_OUTPUT != '' }}
        uses: actions/cache@v4
        with:
          path: ${{ inputs.CACHE_PATH_OUTPUT }}
          key: ${{ inputs.CACHE_KEY_OUTPUT }}
